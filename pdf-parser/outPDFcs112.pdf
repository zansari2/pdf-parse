CS112: Introduction to Computer 
Programming (Summer 2019) 
1 Course Basics 
Instructors:  
Professor Email Office Section 
Michael Neary mpneary ENGR 4417 Wed 2:30 - 4:30  
or by appointment 
 
Graduate TA Email Office Section 
Hamza Mughal hmughal2 TBD TBD 
Course Outcomes: 
 An ability to use procedural programming language concepts including 
expressions, decision statements, simple data types, Boolean logic, 
input/output, loop constructs, and procedures. 
 An ability to combine programming techniques to solve problems of 
varying degrees of difficulty. 
 An ability to refine computer programs through testing and debugging to 
ensure proper operation. 
 An ability to find and understand programming language documentation 
to learn new information needed to solve programming problems. 
Mason Core IT Learning Outcomes: 
 Students will understand the principles of information storage, exchange, 
security, and privacy and be aware of related ethical issues. 
 Students will become critical consumers of digital information; they will 
be capable of selecting and evaluating appropriate, relevant, and 
trustworthy sources of information. 
 Students can use appropriate information and computing technologies to 
organize and analyze information and use it to guide decision-making. 
 Students will be able to choose and apply appropriate algorithmic 
methods to solve a problem. 
Prerequisite: 
C or better in MATH 104, 105, or 113 (or sufficient score on the math 
placement test). 1.1 Textbook: zyBooks 
Required - Zyante online textbook. 
 Sign up 
 Enter zyBook code: GMUCS112NearySummer2019 
 Subscribe using any credit card (Students that retake the course contact 
support@zybooks.com to have the book added to your library for free) 
Quite optional - The Practice of Computing Using Python, second edition. 
William Punch and Richard Enbody. This is for students who want extra 
reading resources. You might be able to view a copy for free at Fenwick 
Library. 
1.2 In-class Participation: Pytania 
We will use an online tool to interactively answer questions in class. That 
means you'll need access to something (a laptop, phone, tablet, etc.) that is 
wifi-enabled, so you can log in, answer questions, and get credit for the day. 
Note that attempting to answer questions from home is not permitted. That 
would be a violation of the honor code. 
Attendence will periodically be taken in other forms, such as the submission of 
in class programming assignments, instead of Pytania. Any form of attendance 
taking will not be announced prior to class. 
1.3 Discussion Board: Piazza 
 Course schedule, announcements, lecture slides, assignments, 
discussion. GTA contacts and office hours will be on Piazza too. 
 All correspondence will go through Piazza. You can send private 
messages to the instructors (visible to all professors and the GTA) as well 
as post public questions visible to all students, collaborate on responses, 
and tag everything by topic. 
 Unless you have a confidential matter to discuss directly with an 
individual professor/TA, please do not email us directly -- use a private 
piazza post or visit in person. Project help questions sent via email are of 
extremely low priority, as they were sent to the wrong place and will 
most likely be responded to with "please post on Piazza". 
 The discussion board on Piazza is required reading for all 
projects. You MUST read the discussion board for clarifications and 
project updates. 
1.4 Blackboard  Grades will be posted to Blackboard. 
 Projects and most lab assignments will be submitted (per published 
deadlines) via Blackboard. 
2 Grading 
Category Sub- Percent Notes 
Category 
In-Class Participation   2% up to 1% extra credit for correctness 
Homework Zyante   3% drop 2 lowest-
reading completion assignments (not chapters) 
Individual 40% drop 1 lowest 
Projects 
Tests and Lab Quizzes 15% drop 2 lowest, average others evenly 
Exams & Tasks 
Midterm 15% midterm replacement (see section on 
Exam 2.5 on Exams) 
Final exam 25% must pass final to pass class class (see 
section on 2.5 on Exams) 
Assessment 
 A+ (>= 98.0%) A (>= 92.0%) A – (>= 90.0%) 
 B+ (>= 88.0%) B (>= 82.0%) B– (>= 80.0%) 
 C+ (>= 78.0%) C (>= 72.0%) C– (>= 70.0%) 
 D (>= 60.0%) 
 F (< 60.0%) 
 There will be no make-up or extra-credit assignments at the end of the 
semester; your grade should be a measure of your semester-long 
progress. 
2.1 Individual Projects 
Programming projects will be a primary focus of your grade - each one should 
take multiple sessions of coding, with questions asked in between. This is the 
practice you need to learn, master, and internalize various concepts of the 
course. Don't be surprised if you're spending 5-20 hours on each one. All 
project grades will be averaged together evenly. 
 Blackboard Submission 
 All projects are to be submitted to Blackboard. You can submit your 
work an unlimited number of times to BlackBoard, and by default 
only the last version will be graded.  Turning in the wrong files will likely result in a zero. You can and 
should download your submitted attempts to verify that you turned 
in a working copy. 
 Blackboard being unavailable is not an excuse for turning in a late 
assignment; in the rare situation that the website is somehow 
unavailable or giving the student an error, the student MUST email 
their submission to their GTA before the deadline, otherwise it will 
be considered late. 
 Catastrophic computer failure will not be cause for an extension. 
Use a backup service such as DropBox (or any cloud service), 
emailing yourself, storing to a USB drive, whatever it takes. Every 
semester multiple students' computers die, are stolen, or otherwise 
'lose' projects. Don't be the student who forgot to (frequently) back 
up your work! 
 Deadlines and Emergency-Days 
 Each project has a posted deadline. 
 The latest you can turn in work is 48 hours after the posted 
deadline, no exceptions. 
 The last project may not be turned in late, to facilitate end-of-
semester grading. 
 Each 24-hour period entered after the deadline lowers the 
maximum score by 20% (not quite the same as a 20% penalty: 
recorded_grade = min(raw_score, 100-(20*num_days_late))). 
 Each student gets three Emergency-Days, which are automatically 
used by late submissions. Each emergency-day allows you to avoid 
a single 24-hour period of penalties. 
 Even if you use emergency-days, you still must turn in work within 
48 hours of the original deadline! (Note that this means you can't 
use three emergency-days on a single project) 
 Emergency-days are only allowed on projects; they can't be used on 
labs or group homeworks. 
 Turning in 1 minute late and turning in 23 hours and 59 minutes 
late are treated the same (and therefore there are no "half 
emergency-days" and no "partial late penalties"). 
 Unused emergency-days will be worth a small bounty at the 
semester's end (0.25% of the semester grade). This is a reward for 
working and planning ahead during the semester. 
 Broken Code == Bad Scores 
 After the first two projects, any code turned in that does not run 
(immediately crashes due to errors), specifically on Python 3.7, will receive at most 50%. No exceptions. At this point, if the grader is 
able to quickly fix your code, you might get some points back. If the 
grader cannot immediately spot and fix the issue, you'll be fortunate 
to get any points at all. 
 Turning in code that runs is a big deal! 
 Honor Code: Special Notes for Projects 
 Programming projects are considered individual efforts, therefore no 
sharing of code and/or discussion of problem solutions are allowed 
with anyone except the TAs or the professor. Student projects will 
be manually and automatically assessed for cheating. You may not 
look at or otherwise view any other individual's code, 
pseudocode, or algorithms. 
 You may not use any Internet resources to create code or 
algorithms, besides the textbooks, the slides, and Piazza, unless 
otherwise specified. However, you are free to look up the syntax 
errors your encounter online, to gain an understanding of what the 
syntax error means. The projects we're doing this semester can be 
directly solved using techniques discussed in class, and no outside 
material is needed unless otherwise noted. 
 It is your responsibility to lock your computers with a password, 
to not post your code to websites like Pastebin that are publicly 
accessible, to guard your USB drives and computers, to not upload 
your files to someone else's computer, etc. You will be liable for any 
access gained to your code. 
 See Honor code section below for more details. 
2.2 Labs 
 All lab assessment grades will be averaged together. Lab assessments 
will be weekly quizzes or in-lab tasks, to be completed during lab. 
 Lab quizzes and tasks require attendance at your designated lab time to 
get the credit. 
 Any missed lab assessment is simply missed, regardless of the reason 
why (travel, illness, work, traffic, receiving a major award, getting 
married, saving the universe, etc.).  Two lowest lab grades will be 
dropped to cover the very rare cases of understandable missed labs. 
 If you choose to miss some early on, and later on have to miss for some 
understandable reason, that is too bad. Try to save the drops so you can 
actually throw out a bad grade, and not just hide a lazy zero. Pretending 
you don't have them is your best approach. 
2.3 Zyante (Zybook) Readings  Zyante readings are graded based on the completion percentage of 
activities before the designated deadline of each chapter. 
 See the schedule page on Piazza for reading assignment due date. 
 Make sure you're logged in to get credit for reading completion. 
 Optional subsections are not considered for Zyante grading. 
2.5 Exams 
 Exams are closed book/notes unless specified otherwise by instructor. 
They will be entirely paper and pencil - no computers. 
 All students must have their GMU identification available on testing days. 
 The final exam is cumulative. If you perform better on the final exam 
than your midterm exam, we will replace the midterm grade with the 
final grade. 
 If you know in advance that you are unable to make an exam for a valid 
and unavoidable reason (such as a scheduled surgery, etc.), you must 
notify the professor at least one week before the scheduled exam date to 
make arrangements for a make-up, and bring documentation with you 
when you take the make-up. 
 If you miss an exam due to a university-accepted excused absence (such 
as an illness or car accident the day and time of the exam), you must 
notify your professor within 24 hours of your absence to make 
arrangements for a makeup, and bring approved documentation with you 
when you take the make-up exam. Failure to follow either of these 
policies will result in a zero. 
 The final will not be given early. You are starting the course with 
knowledge of the schedule (see GMU's Final Exam Calendar for the latest 
schedule, updated as weather events require). 
 Per departmental policy, you must pass a significant exam threshold to 
receive a passing grade in this class, regardless of your performance on 
other assignments. Failing the final exam (<60.0%), will result in a 
failing grade (F) for the entire course unless you have achieved an 
average exam score >=65%. This average score is calculated as 
a weighted average of your exam scores (((15*Labs) + (15*Midterm) + 
(25*Final))/55). Note that midterm grades will not be "replaced" with the 
final grade for this calculation. In short, in 99/100 cases, you must pass 
the final exam to pass the course. 
2.6 Contested Grades 
If you feel points have been incorrectly deducted, contact the grader. For all 
homework, projects, and lab work, that is your GTA. For exams, that is your 
professor. Contesting of grades on any/all submissions must be requested within three days of receiving the grade (on BlackBoard). No grade changes 
will be considered subsequent to that deadline. 
3 Office Hours and Discussion Board 
There is substantial support available to you outside of lecture time in the form 
of office hours and and the online discussion board (Piazza). If you are having 
difficulty on a project or lab, we encourage you to reach out as early as 
possible. That said, to ensure fairness and facilitate learning, we have some 
basic rules for seaking help outlined below. 
Please note that the is a discussion forum for you, the students, to discuss the 
course and the course material. It is monitored regularly by the GTA and your 
professor, but this is NOT a replacement for office hours, lecture with your 
professor, or labs. 
3.1 Rules for Office Hours 
 For students seeking help with programming assignments during office 
hours, students must identify the line number, through debug print 
statements, where they believe an error to be before seeing the TA or 
instructor. This implies that you must have at least one test case that 
fails, to bring to office hours before the TAs or instructor can help you. 
 For more general programming assignment questions, students must 
bring their own pseudocode to office hours before the TA or professor can 
help you. 
 Under no circumstances will the professor or GTA reveal more than three 
lines of code at a time during office hours. Students must make 
significant, individual effort on all projects before coming to see a 
GTA/professor. Waiting until the last minute, in the expectations that the 
entire project will be explained in one office hours session, is not feasible. 
 Office hours are often crowded - do not rely on them for last minute help, 
as we cannot guarantee that we will be able to spend significant time 
with every student. 
 If you have any questions about what you are/aren't permitted to do on a 
project/lab and you and the TA cannot find a the answer written 
somewhere, you should ask your professor. "So-and-so said" will not 
be an accepted as a reason for grade re-evaluations (unless "so-
and-so" is your professor). 
 Your time in professor office hours will be limited depending on amount 
of people who are seeking help. You may be asked to leave and come 
back later so that everyone can have a chance to ask a question. Office 
hours are not a place to camp out and work on your assignments, 
you must bring specific questions or know specifically what you are 
having trouble with.  Students often forget that office hours are also a time to get clarification 
on concepts we have covered in class, so don't forget that you can ask 
more questions than just "my project doesn't work and I think the 
problem is on line X, am I right?". We are happy to answer conceptual 
questions. 
3.1 Rules for the Discussion Board 
 Students are encouraged to use the discussion board, Piazza, to ask and 
answer questions about assignments, labs, course material, etc. 
 No sharing answers or code solutions to assignments on the discussion 
board. See Honor code section below for more details. 
 Students can post questions and code privately, although the instructor 
reserves the right to make any post public, so that other students can 
see the responses. 
 For students wishing to post their code privately to Piazza, the same 
rules apply as when coming to office hours; if you have code written, you 
must produce at least one failing test case where you have identified 
what line number is giving you problems. 
 There are no UTAs assigned to CS112 this summer. Therefore, responses 
to questions can be expected within 36 hours, though often times much 
sooner. 
 Statements made on the discussion boards, even by TAs and especially 
by other students, should NOT be considered the definitive word on the 
subject unless it is verified by your professor (in the assignment 
description, in class, posted on Piazza, etc.). 
 If you have any questions about what you are/aren't permitted to do on a 
project/exam and you/others cannot find a the answer written 
somewhere, you should ask your professor. "So-and-so said" will not 
be an accepted as a reason for grade re-evaluations (unless "so-
and-so" is your professor). 
4 Honor Code 
 The honor code at George Mason is an important part of our academic 
culture. A degree from this institution should be a direct measure of your 
own progress and abilities, and as such at all times we must ensure that 
all work that should be your own is your own. 
 All students are expected to abide by the GMU Honor Code. This policy is 
rigorously enforced. 
 The computer science department has an CS Honor Code Policies to 
understand better what constitutes cheating in the CS setting. It clarifies 
some scenarios that are unique to our sorts of assignments. Note that the CS department doesn't have any "extra" policy for the honor code on 
top of the university's, this document merely helps you to understand 
how the honor code applies to programming and CS but it doesn't 
actually restrict it at all. 
 We take the honor code quite seriously. Any attempts at copying or 
sharing code, algorithms, or other violations of the honor code simply will 
not be tolerated. Cheating will be prosecuted and result in a notification 
of the Honor Committee as outlined in the GMU Honor Code. Sharing, 
collaboration, or looking at any code or algorithm related to programming 
projects that is not your own is considered cheating. This includes 
using code found on the internet. 
 As seductively simple as it may seem to just copy and paste work from a 
friend, or even to just work on the project on your own machines next to 
each other, remember that it is just as easy to compare your work 
automatically and electronically, and discover the similarities in text and 
structure. We use automated software to flag suspicious cases, and then 
review them to find the cases that must be submitted to the Office of 
Academic Integrity. 
 The penalty for cheating will always be far worse than a zero grade, to 
ensure it's not worth taking the chance. Confirmed cases of cheating 
almost always translate into course failure. 
 Please read Understanding the Honor Code - Dr. Snyder's thoughts about 
the purpose of the honor code in a computer science course. 
 There are definitely opportunities to study, work, and learn together 
throughout this course - Zyante questions, lab exercises, and more. 
Mostly you will need to work independently for any sort of "test" and for 
projects. 
5 The Office of Disability Services 
Students with a learning disability or other condition (documented with 
GMU's Office of Disability Services) that may impact academic performance 
should speak with the professor ASAP to discuss appropriate accommodations. 
Even if you don't know whether you plan on utilizing the accommodations for 
any assignment/test, it's in your best interest to prepare and get documented 
ahead of time. 
 